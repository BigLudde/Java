import java.util.Random;

class ValjPolylinje {
	public static final Random rand = new Random();
	public static final int ANTAL_POLYLINJER = 10;

	public static void main(String[] args) {
		// skapa ett antal slumpmässiga polylinjer
		boolean check = false;
		Polylinje[] polylinjer = new Polylinje[ANTAL_POLYLINJER];
		for (int i = 0; i < ANTAL_POLYLINJER; i++) {
			polylinjer[i] = slumpPolylinje();
			System.out.println(polylinjer[i]);
			// gul check
			if (polylinjer[i].getFarg() == "gul")
				check = true;
		}

		System.out.println();
		System.out.println();
		// visa polylinjerna
		// bestäm den kortaste av de polylinjer som är gula
		// visa den valda polylinjen
		if (check == false)
			System.out.println("sällsynt ingen gul :(");
		else {
			double minstaLangd = 10000;
			Polylinje minstaPoly = new Polylinje();
			for (int i = 0; i < ANTAL_POLYLINJER; i++) {
				polylinjer[i].getFarg();
				if (polylinjer[i].getFarg() == "gul")
					if (polylinjer[i].langd() < minstaLangd) {
						minstaLangd = polylinjer[i].langd();
						minstaPoly = polylinjer[i];
					}
			}
			System.out.println("Minsta gula polylinjen:");
			System.out.println(minstaPoly);
			System.out.println(minstaLangd + " enheter lång");
		}
	}

	// slumpPunkt returnerar en punkt med ett slumpmässigt namn,som är en stor
	// bokstav i
	// det engelska alfabetet, ochslumpmässiga koordinater.

	public static Punkt slumpPunkt() {
		String n = "" + (char) (65 + rand.nextInt(26));
		int x = rand.nextInt(11);
		int y = rand.nextInt(11);
		return new Punkt(n, x, y);
	}

// slumpPolylinje returnerar en slumpmässig polylinje, varsfärg är antingen blå,
// eller röd//eller gul.Namn på polylinjens hörn är stora bokstäver i det
// engelska alfabetet. Två hörn//kan inte ha samma namn.
	public static Polylinje slumpPolylinje() {
		// skapa en tom polylinje, och lägg till hörn till den

		Polylinje polylinje = new Polylinje();
		int antalHorn = 2 + rand.nextInt(7);
//		int antalValdaHorn = 0;
//		boolean[] valdaNamn = new boolean[26];
		// ett och samma namn kan inte förekomma flera gånger
		// punktgenerator
		Punkt[] pArray = new Punkt[antalHorn];
		for (int i = 0; i < antalHorn; i++) {
			Punkt p = new Punkt();
			p = slumpPunkt();

			pArray[i] = p;
		}
		// dublett sparning + punktlagring för polylinjen
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < antalHorn; i++) {
			String ip = pArray[i].getNamn();
			polylinje.laggTill(pArray[i]);

			for (int j = 1; j + i < antalHorn; j++) {
				String jp = pArray[j + i].getNamn();
				if (jp.equals(ip)) {
					sb.insert(0, jp);
				}
			}
		}

		// dublett förstöring
		String stringf = sb.toString();
		for (int i = 0; i < stringf.length(); i++) {
			char temp = stringf.charAt(i);
			String delet = Character.toString(temp);
			polylinje.taBort(delet);
		}

		int fargRandom = rand.nextInt(3);

		if (fargRandom > 2)
			polylinje.setFarg("blå");
		if (fargRandom < 2)
			polylinje.setFarg("röd");
		else
			polylinje.setFarg("gul");

//		Punkt valdPunkt = null;
//		char valtChar = 0;
//		while (antalValdaHorn < antalHorn) {
//		}

		return polylinje;
	}
}
